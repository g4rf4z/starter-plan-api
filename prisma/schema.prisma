  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "mongodb"
    url = env("DATABASE_URL")
  }

  model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    firstname String
    lastname String
    email String @unique

    // Define a one-to-many relationship to the Session model.
    // sessions Session[]

    // Define a one-to-one relationship to the Cart model.
    cart Cart?

    @@map("users")
  }

//   model Session {
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   active Boolean @default(true)
//   userAgent String?

//   // Define a many-to-one relationship to the User model.
//   user User @relation(fields: [userId], references: [id])
//   userId String @db.ObjectId

//   @@map("sessions")
// }

  model Cart {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Define a one-to-one relationship to the User model.
    user User @relation(fields: [userId], references: [id])
    userId String @unique @db.ObjectId

    cartItems CartItem[]

    @@map("carts")
  }

  model CartItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart Cart @relation(fields: [cartId], references: [id])
  cartId String @db.ObjectId

  products Product[] @relation(fields: [productId], references: [id])
  productId String[] @db.ObjectId

  @@map("cartItems")
}

  model Product {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String
    url String
    description String
    price Float

    cartItems CartItem[] @relation(fields: [cartId], references: [id])
    cartId String[] @db.ObjectId

    @@map("products")
  }