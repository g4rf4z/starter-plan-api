  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider = "mongodb"
    url = env("DATABASE_URL")
  }

  model User {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    firstname String
    lastname String
    email String @unique
    // password String

    cart Cart?
    // session Session[]

    @@map("users")
  }

  // model Session {
  //   id String   @id @default(auto()) @map("_id") @db.ObjectId
  //   createdAt DateTime @default(now())
  //   updatedAt DateTime @updatedAt

  //   active Boolean @default(true)
  //   userAgent String?

  //   user User @relation(fields: [userId], references: [id])
  //   userId String @db.ObjectId

  //   @@map("sessions")
  // }

  // model ResetPasswordToken {
  //   id String @id @default(auto()) @map("_id") @db.ObjectId
  //   createdAt DateTime @default(now())
  //   updatedAt DateTime @updatedAt
  //   expiresAt DateTime

  //   token String @unique
  //   userId String @db.ObjectId
  //   isValid Boolean @default(true)

  //   @@map("reset_password_tokens")
  // }

  model Cart {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String @unique @db.ObjectId

    cartItems CartItem[]

    @@map("carts")
  }

  model CartItem {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    cart Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
    cartId String @db.ObjectId

    products Product[] @relation(fields: [productId], references: [id])
    productId String[] @db.ObjectId

    @@map("cartItems")
  }

  model Product {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name String
    url String
    description String
    price Float

    cartItems CartItem[] @relation(fields: [cartId], references: [id])
    cartId String[] @db.ObjectId

    @@map("products")
  }